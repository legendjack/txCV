单目摄像头检测装甲板，用串口给云台发送装甲板相对打击点的位置信息，控制云台移动

pitchOut = yawOut = 250 表示进入搜索模式
pitchOut = yawOut = 100 表示不动
shot = 1 发射，shot = 0 不发射

如果检测到的灯条数量等于0，先发送云台不动的信号，一定时间后发送进入搜索模式的信号

如果检测到装甲，则发送装甲点和云台指向的点之间的距离信息

如果没有检测到装甲，但是有灯条，10帧以内发送上一帧的pitch和yaw，10帧以外发送灯条的位置

version 1.3
  提高分辨率：800*600
  提高帧率：cap.set(CV_CAP_PROP_FOURCC, CV_FOURCC('M', 'J', 'P', 'G'));
		 cap.set(CAP_PROP_FPS, 60);
  提高饱和度：cap.set(CV_CAP_PROP_SATURATION, 80);
  提高饱和度和分辨率可以提高检测装甲的距离
 
version 1.2
  修复BUG：没有检测到装甲，云台就会立刻归位的BUG
  添加预测
 
version 1.3
  多线程，一个线程专门读取视频帧，另一个线程处理视频帧
  这样处理可以节约一点时间，但是在某些设备上会出现一点问题，使用的时候需要注意
 
version 1.4
  去掉了KalmanFilter：KF利用目标在两帧间的位置得到速度，但是云台转速稳定后，目标
  在画面中的位置相对固定（因为摄像头是固定在云台上的），计算出来的速度为0，所以KF失效
  添加鼠标响应获取targetPoint
 
version 2.0
  估计步兵车的运动状态，如果是匀速移动，保持移速后加上一定角度使云台跟上步兵车转动
  实现困难，暂时不用
 
version 2.1
  实现了SearchWindow类，在某一帧找到装甲后，下一帧开始在SearchWindow返回的ROI区域内继续搜索目标
 
version 3.0
  分区赛之后的第一个版本，为了防止出现误射的问题，修改以下两点
  1. 修改检测颜色的算法，将HSV检测直方图改为分析目标区域RGB值，具体看代码
  实测这样检测的结果更接近人眼看到的颜色；
  2. 增加一个变量，uint8_t shot，为1表示发射，0表示不发射。如果只检测到灯条，但是没检测到装甲
  那么只控制云台转动，不发射。现在发送三个变量：pitchOut, yawOut, shot
